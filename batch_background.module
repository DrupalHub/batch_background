<?php

/**
 * @file
 * Batch background module.
 */

/**
 * Implements hook_entity_info().
 */
function batch_background_entity_info() {
  $items = array();

  $items['batch_background'] = array(
    'label' => t('Batch'),
    'controller class' => 'EntityAPIController',
    'entity class' => 'BatchBackground',
    'base table' => 'batch_background',
    'entity keys' => array(
      'id' => 'bid',
    ),
    'module' => 'batch_background',
  );

  return $items;
}

/**
 * Create a batch background entity.
 *
 * @return BatchBackground
 *   An unsaved batch background object.
 */
function batch_background_create() {
  return entity_create('batch_background', array());
}

/**
 * Load multiple batch background entities.
 *
 * @param $ids
 *   Array of IDS.
 *
 * @return BatchBackground[]
 */
function batch_background_load_multiple($ids) {
  return entity_load('batch_background', $ids);
}

/**
 * Load a single instance of batch background entity.
 *
 * @param $id
 *   Batch background entity background.
 *
 * @return BatchBackground
 */
function batch_background_load($id) {
  return entity_load_single('batch_background', $id);
}

/**
 * Delete multiple batch background entities.
 *
 * @param $ids
 *   Array of batch background IDs.
 */
function batch_background_delete_multiple($ids) {
  entity_delete_multiple('batch_background', $ids);
}

/**
 * Implements hook_menu().
 */
function batch_background_menu() {
  $items = array();

  $items['batch_background/process/%batch_background/%'] = array(
    'title' => 'Batch background process callback',
    'access callback' => TRUE,
    'page callback' => 'batch_background_callback_process',
    'page arguments' => array(2,3),
  );

  return $items;
}

/**
 * Implements hook_init().
 *
 * Injecting the variables to the JS.
 */
function batch_background_init() {
  if (!$batches = batch_background_get_all_batches()) {
    return;
  }

  // Setting the information for the JS part.
  $callbacks = array();
  foreach ($batches as $batch) {
    $callbacks = array_merge($callbacks, array(array($batch->bid, $batch->delta)));
  }

  drupal_add_js(
    array('batch_background' => $callbacks),
    array('type' => 'setting')
  );

  drupal_add_js(drupal_get_path('module', 'batch_background') . '/js/batch_background.js');
}

/**
 * Menu callback; Execute the callbacks from the background batch.
 *
 * @param BatchBackground $batch
 *   The batch object.
 * @param $delta
 *   The delta of the callback. When the process is done yet we need to save the
 *   last delta of the operations we processed.
 */
function batch_background_callback_process($batch, $delta) {
  // Starting from the last position.
  $callbacks = array_slice($batch->batch, $delta);

  foreach ($callbacks as $delta => $info) {
    call_user_func_array($info[0], $info[1]);
  }

  $batch->delta = $delta;

  $batch->save();
}

/**
 * Get all the batches.
 *
 * @return BatchBackground[]
 */
function batch_background_get_all_batches() {
  $query = new EntityFieldQuery();

  $results = $query
    ->entityCondition('entity_type', 'batch_background')
    ->execute();

  if (empty($results['batch_background'])) {
    return;
  }

  return batch_background_load_multiple(array_keys($results['batch_background']));
}
